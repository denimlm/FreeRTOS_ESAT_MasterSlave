/*
 * ESAT_Master.c
 *
 *  Created on: 16.12.2024 г.
 *      Author: MLM1SF
 */

/* Standard includes. */
#include <stdio.h>
#include "ESAT_Slave.h"

enum en_MasterStates  MasterState = M_INIT;

/*
 * ESAT_Master_Request()
 * Represent Device A
 *
 * \param    u32_Request
 *
 * \return   result
 * */
uint32_t ESAT_Master_Request(enum en_MasterSync en_Request)
{
	uint32_t lResult = 0u;

	if(REQUEST_STATUS == en_Request)
	{
		lResult = 0u;
	}
	else if(REQUEST_OP_RESULT == en_Request)
	{
		lResult = 1u;
	}
	else if(REQUEST_ERROR == en_Request)
	{
		lResult = 2u;
	}
	else
	{

	}
	return lResult;
}

/*
 * ESAT_MasterTrigger()
 * Represent Device A
 *
 * \param    u32_Source
 *
 * \return   en_MasterStates
 * */
enum en_MasterStates ESAT_MasterTrigger(uint32_t u32_Source)
{
	enum en_MasterStates lReturn = M_INIT;

	if(0u != (u32_Source % 10))
	{
		lReturn = PROCESSING;
	}
	else
	{
		lReturn = IDLE;
	}
	return lReturn;
}

/*
 * ESAT_Master()
 * Represent Device A
 *
 * \param    u32_Trigger
 * \param    u32_SlaveResponse
 *
 * \return   value
 * */
enum en_MasterSync ESAT_Master(uint32_t u32_Trigger, uint32_t u32_SlaveResponse)
{
	enum en_MasterSync lReturn = 0u;
	MasterState = ESAT_MasterTrigger(u32_Trigger);

	if(FAULT == u32_SlaveResponse)
	{
		MasterState = ERROR;
	}
	else if(ACTIVE == u32_SlaveResponse)
	{
		printf( "ESAT_Master report SLAVE is in ACTIVE state \r\n" );
	}
	else if(SLEEP == u32_SlaveResponse)
	{
		printf( "ESAT_Master report SLAVE is in SLEEP state \r\n" );
	}

	switch(MasterState)
	{
	case PROCESSING:
		lReturn = REQUEST_STATUS;//ESAT_Master_Request(u32_SlaveResponse);
		printf( "ESAT_Master PROCESSING state \r\n" );
	break;

	case IDLE:
		printf( "ESAT_Master IDLE state \r\n" );
	break;

	case ERROR:
		printf( "ESAT_Master report ERROR on SLAVE site \r\n" );
		if( FAULT == u32_SlaveResponse)
		{
			MasterState = PROCESSING;
		}
		else
		{
			lReturn = REQUEST_ERROR;
		}
	break;

	default:
		printf( "ESAT_Master no matching case \r\n" );
	break;
	}

	return lReturn;
}


